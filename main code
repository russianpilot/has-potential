int sq_s = 8; // Size of Potential_Square
int d = 2;

int s = 52;

int[][] oa = new int[s][s];
float[][] pa = new float[s*d][s*d];

int x_off = 50;
int y_off = 50;

void setup() {
  // x: 832:Main Potential Field + 100:x_off +  50: Scale
  // y: 832:Main Potential Field + 100:y_off + 200: Evaluation Graph
  size(982, 932); 
  background(255);
  colorMode(HSB, 360, 100, 100);

  for (int i = 0; i < s*d; i++) {
    for (int j = 0; j < s*d; j++) {
      pa[i][j] = int(random(100));
    }
  }

  for (int i = 0; i < s; i++) {
    for (int j = 0; j < s; j++) {
      oa[i][j] = -1;
    }
  }
  int p_rahmen = 40;
  p_rect(0, 0, 1, 52, p_rahmen);
  p_rect(0, 0, 52, 1, p_rahmen);
  p_rect(0, 51, 52, 1, p_rahmen);
  p_rect(51, 0, 1, 52, p_rahmen);

  p_rect(8, 23, 4, 4, 100);

  //p_rect(25, 6, 1, 40, 0);
  p_rect(40, 23, 4, 4, 0);

  //p_rect(40, 4, 4, 6, 80);
  //p_rect(30, 30, 3, 8, 100);
  //p_rect(36, 30, 3, 8, 20);
  
  // Skala
  for (int i = 20; i >= 1; i--) {
    fill(map(float(i*5), 0, 100, 240, 60), 100, 100);
    rect(s*d*sq_s+x_off+25,y_off+(s*d*sq_s)/20*(20-i),25,(s*d*sq_s)/20);
    textSize(15);
    fill(0,0,0);
    text(i*5,s*d*sq_s+x_off+55, y_off+(s*d*sq_s)/20*(20-i)+5);
  }
  text(0,s*d*sq_s+x_off+55, y_off+(s*d*sq_s)/20*(20-0)+5);
  
  // Black Frame
  stroke(255, 0, 0);
  rect(x_off-1,y_off-1,832+1,832+1);
}

void draw() {
  for (int i = 0; i < s*d-1; i++) {
    for (int j = 0; j < s*d-1; j++) {
      if (oa[int(i/2)][int(j/2)] <= -1) {
        pa[i][j] = (pa[i-1][j]+pa[i+1][j]+pa[i][j-1]+pa[i][j+1])/4;
      }
    }
  }

  // Drawing Results
  noStroke();
  for (int i = 0; i < s*d; i++) {
    for (int j = 0; j < s*d; j++) {
      fill(pa[i][j], 100, 100);
      rect(i*sq_s+x_off, j*sq_s+y_off, sq_s, sq_s);
    }
  }
  /*
  noFill();
   stroke(255, 0, 0);
   for (int i = 0; i < s; i++) {
   for (int j = 0; j < s; j++) {
   rect(i*(d*sq_s)+x_off, j*(d*sq_s)+y_off, sq_s*d, sq_s*d);
   //pa[i][j] = int(random(100));
   }
   }
   */
}

void p_rect(int x, int y, int xs, int ys, int p) {
  for (int i = x; i < x+xs; i++) {
    for (int j = y; j < y+ys; j++) {
      oa[i][j] = p;
    }
  }

  for (int i = 0; i < s*d; i++) {
    for (int j = 0; j < s*d; j++) {
      if (oa[int(i/2)][int(j/2)] > -1) {
        pa[i][j] = map(oa[int(i/2)][int(j/2)], 0, 100, 240, 60);
      }
    }
  }
  /*
  stroke(0, 0, 100);
   noFill();
   rect(x*d+1,y*d+1,(x+xs)*d-1,(y+ys)*d-1);
   */
}
